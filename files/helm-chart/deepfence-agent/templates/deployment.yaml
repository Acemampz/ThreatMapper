apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepfence-cluster-agent
  namespace: {{ .Values.namespace }}
  labels:
  {{- include "deepfence-cluster-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
  {{- include "deepfence-cluster-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
    {{- include "deepfence-cluster-agent.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: deepfence-cluster-agent
          image: "{{ .Values.image.clusterAgentImageName }}:{{ .Values.image.clusterAgentImageTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - cluster-agent
            - {{ required "managementConsoleIp is required" .Values.managementConsoleIp }}
          env:
            - name: DEEPFENCE_KEY
              value: {{ .Values.deepfenceKey }}
            {{- if .Values.hostNamePrefix }}
            - name: AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SCOPE_HOSTNAME
              value: "{{ .Values.hostNamePrefix }}-$(AGENT_HOSTNAME)"
            {{- else }}
            - name: SCOPE_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- end }}
            - name: AGENT_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AGENT_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: 25m
              memory: 80Mi
      serviceAccountName: {{ .Values.serviceAccount.name }}