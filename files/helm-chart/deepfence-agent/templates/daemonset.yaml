apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: deepfence-agent-daemon
  namespace: deepfence
spec:
  selector:
    matchLabels:
      app: deepfence-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deepfence-agent
    spec:
      hostPID: true
      hostNetwork: true
      serviceAccountName: deepfence-agent
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists

      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
            type: Socket
        - name: kernel-sys
          hostPath:
            path: /sys/kernel/debug
            type: Directory
        - name: host-fs
          hostPath:
            path: /
            type: Directory
        - name: fenced-path
          emptyDir: {}

      containers:
        - name: deepfence-agent
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
          env:
            - name: DF_BACKEND_IP
              value: "{{ .Values.managementConsoleIp }}"
            - name: DF_KUBERNETES_ON
              value: "Y"
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-sock
            - mountPath: /sys/kernel/debug
              name: kernel-sys
            - mountPath: /fenced/mnt/host
              name: host-fs
              readOnly: true
            - mountPath: /var/log/fenced
              name: fenced-path